# -*- coding: utf-8 -*-
"""Shiv_Preprocessing_map_null(14th june).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oKCm-r-2ZeSFufCuDMVAytgu1EXFY3tK

### Apply Map and Deal with Null data in your same datasets
Datasets used :
1. Titanic Dataset : https://raw.githubusercontent.com/shivshaktisahoo/test/main/titanic.csv
2. Real Estate Price Prediction: https://raw.githubusercontent.com/shivshaktisahoo/test/main/Real%20estate.csv
3. Medical Cost Personal Datasets: https://raw.githubusercontent.com/shivshaktisahoo/test/main/insurance.csv

1. Titanic.csv file (using map and deal NAN)
2. Real Estate .csv file (no need for map and can't deal with NAN as no such values in datasets)
3. Medical Cost Personal.csv file (using map and can't deal with NAN as no such values in datasets)
"""

# Importing Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
plt.rcParams["figure.figsize"] = (15,5)
import sklearn
from sklearn.linear_model import LinearRegression
import random

"""### 1. Titanic Dataset"""

dataset1 = pd.read_csv('https://raw.githubusercontent.com/shivshaktisahoo/test/main/titanic.csv')
dataset1.sample(5)

dataset1.info()

# No.of null values in each columns/attributes
dataset1.isna().sum()

# Age contains NAN
dataset1[16:21]

# Replacing NAN values with mean values of Age column
age_mean = dataset1.Age.describe()['mean'] 
dataset1['Age'] = dataset1['Age'].fillna(age_mean)
dataset1[16:21]

# Replacing NAN values with top values of Embarked column
dataset1['Embarked'] = dataset1['Embarked'].fillna(dataset1.Embarked.describe()['top'])

dataset1 = dataset1.drop(columns='Cabin') # Removing column Cabin
dataset1.isna().sum() # All NAN values handled properly and resolved

dataset1['Sex'] = dataset1['Sex'].map({"male":0, "female":1})

dataset1

x = dataset1.drop(['Name', 'Ticket', 'Embarked'], axis=1)

x.info() # all are non-numeric types

"""### 2. Real Estate Price Prediction"""

dataset2 = pd.read_csv("https://raw.githubusercontent.com/shivshaktisahoo/test/main/Real%20estate.csv")
dataset2.head()

dataset2.info()

# no NAN values
# not required map

"""### 3. Medical Cost Personal Datasets"""

dataset3 = pd.read_csv("https://raw.githubusercontent.com/shivshaktisahoo/test/main/insurance.csv")
dataset3

dataset3.info()

dataset3.region.unique()

"""no NAN values in datasets.

using map on columns - sex,	smoker,	region
"""

dataset3['sex'] = dataset3['sex'].map({"male":0, "female":1})
dataset3['smoker'] = dataset3['smoker'].map({"no":0, "yes":1})
dataset3['region'] = dataset3['region'].map({'southwest':1, 'southeast':2, 'northwest':3, 'northeast':4})

dataset3

# all columns converted to numeric type